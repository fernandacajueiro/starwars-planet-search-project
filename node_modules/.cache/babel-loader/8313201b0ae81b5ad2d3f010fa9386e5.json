{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext } from 'react';\nimport Loading from './Loading';\nimport Filters from './Filters';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const {\n    planets,\n    tableHeaders,\n    loading,\n    filterByName: {\n      name\n    },\n    filterByNumericValues: {\n      column,\n      comparison,\n      value\n    }\n  } = useContext(PlanetsContext);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  });\n\n  function tableHead() {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, tableHeaders.map(header => /*#__PURE__*/React.createElement(\"th\", {\n      key: header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, header)));\n  }\n\n  function tableRows() {\n    let filteredPlanets = planets;\n\n    if (comparison === 'menor que') {\n      filteredPlanets = filteredPlanets.filter(planet => +planet[column] < +value);\n    }\n\n    if (comparison === 'maior que') {\n      filteredPlanets = filteredPlanets.filter(planet => +planet[column] > +value);\n    }\n\n    if (comparison === 'igual a') {\n      filteredPlanets = filteredPlanets.filter(planet => +planet[column] === +value);\n    }\n\n    return filteredPlanets.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"planetsName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, planet.url)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Star Wars Planet Search\"), /*#__PURE__*/React.createElement(Filters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"planetsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, tableHead()), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, tableRows())));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","Loading","Filters","PlanetsContext","Table","planets","tableHeaders","loading","filterByName","name","filterByNumericValues","column","comparison","value","tableHead","map","header","tableRows","filteredPlanets","filter","planet","index","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Loading from './Loading';\nimport Filters from './Filters';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const {\n    planets,\n    tableHeaders,\n    loading,\n    filterByName: { name },\n    filterByNumericValues: { column, comparison, value },\n  } = useContext(PlanetsContext);\n\n  if (loading) return <Loading />;\n\n  function tableHead() {\n    return (\n      <tr>\n        { tableHeaders.map((header) => (\n          <th key={ header }>{header}</th>\n        ))}\n      </tr>\n    );\n  }\n\n  function tableRows() {\n    let filteredPlanets = planets;\n    if (comparison === 'menor que') {\n      filteredPlanets = filteredPlanets\n        .filter((planet) => +(planet[column]) < +(value));\n    }\n\n    if (comparison === 'maior que') {\n      filteredPlanets = filteredPlanets\n        .filter((planet) => +(planet[column]) > +(value));\n    }\n\n    if (comparison === 'igual a') {\n      filteredPlanets = filteredPlanets\n        .filter((planet) => +(planet[column]) === +(value));\n    }\n\n    return filteredPlanets\n      .map((planet, index) => (\n        <tr key={ index }>\n          <td id=\"planetsName\">{planet.name}</td>\n          <td>{planet.rotation_period}</td>\n          <td>{planet.orbital_period}</td>\n          <td>{planet.diameter}</td>\n          <td>{planet.climate}</td>\n          <td>{planet.gravity}</td>\n          <td>{planet.terrain}</td>\n          <td>{planet.surface_water}</td>\n          <td>{planet.population}</td>\n          <td>{planet.films}</td>\n          <td>{planet.created}</td>\n          <td>{planet.edited}</td>\n          <td>{planet.url}</td>\n        </tr>\n      ));\n  }\n\n  return (\n    <div>\n      <h1>Star Wars Planet Search</h1>\n\n      <Filters />\n\n      <table id=\"planetsTable\">\n        <thead>\n          {tableHead()}\n        </thead>\n\n        <tbody>\n          {tableRows()}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}