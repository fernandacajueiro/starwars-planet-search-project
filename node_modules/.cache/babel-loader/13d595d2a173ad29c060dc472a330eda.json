{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Filters.jsx\";\nimport React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Filters.css';\n\nfunction Filters() {\n  const {\n    setFilterByName,\n    columns,\n    setColumns,\n    setFilterByNumericValues,\n    filterByNumericValues,\n    setSortState\n  } = useContext(PlanetsContext);\n  const [filterByValues, setFilterByValues] = useState({\n    column: 'population',\n    comparison: 'menor que',\n    value: '0'\n  });\n  const [sort, setSort] = useState({\n    sortColumn: 'name',\n    sortType: 'ASC'\n  });\n\n  function handleFilterByName({\n    target: {\n      value\n    }\n  }) {\n    setFilterByName({\n      name: value\n    });\n  }\n\n  function handleFilterByValues({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setFilterByValues({ ...filterByValues,\n      [name]: value\n    });\n  }\n\n  function handleClick() {\n    setFilterByNumericValues([...filterByNumericValues, filterByValues]);\n    const initialColumns = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n    setColumns(initialColumns.filter(option => option !== filterByValues.column));\n    setFilterByValues({ ...filterByValues,\n      column: columns[0]\n    });\n  }\n\n  function handleSort({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setSort({ ...sort,\n      [name]: value\n    });\n  }\n\n  function handleSortClick() {\n    setSortState({\n      sort\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"name-filter\",\n    name: \"name\",\n    id: \"nameInput\",\n    placeholder: \"Search for text...\",\n    onChange: handleFilterByName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-filter\",\n    name: \"column\",\n    id: \"filter-column\",\n    onChange: handleFilterByValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, columns.map(option => /*#__PURE__*/React.createElement(\"option\", {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, option)))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-comparison\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"comparison-filter\",\n    name: \"comparison\",\n    id: \"filter-comparison\",\n    onChange: handleFilterByValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"menor que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"menor que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"maior que\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"maior que\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"igual a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"igual a\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"filter-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    \"data-testid\": \"value-filter\",\n    name: \"value\",\n    id: \"filter-value\",\n    min: \"0\",\n    onChange: handleFilterByValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"button-filter\",\n    id: \"filter-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Filter\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sort-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    \"data-testid\": \"column-sort\",\n    name: \"sortColumn\",\n    onChange: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"name\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"orbital_period\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"orbital_period\"))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"asc-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-asc\",\n    value: \"ASC\",\n    name: \"sortType\",\n    onClick: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), \"Ascendente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-desc\",\n    value: \"DESC\",\n    name: \"sortType\",\n    onClick: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), \"Decrescente\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"column-sort-button\",\n    onClick: handleSortClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Sort\")));\n}\n\nexport default Filters;","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Filters.jsx"],"names":["React","useContext","useState","PlanetsContext","Filters","setFilterByName","columns","setColumns","setFilterByNumericValues","filterByNumericValues","setSortState","filterByValues","setFilterByValues","column","comparison","value","sort","setSort","sortColumn","sortType","handleFilterByName","target","name","handleFilterByValues","handleClick","initialColumns","filter","option","handleSort","handleSortClick","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAO,uBAAP;;AAEA,SAASC,OAAT,GAAmB;AACjB,QAAM;AACJC,IAAAA,eADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,wBAJI;AAKJC,IAAAA,qBALI;AAMJC,IAAAA;AANI,MAOFT,UAAU,CAACE,cAAD,CAPd;AASA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC;AACnDW,IAAAA,MAAM,EAAE,YAD2C;AAEnDC,IAAAA,UAAU,EAAE,WAFuC;AAGnDC,IAAAA,KAAK,EAAE;AAH4C,GAAD,CAApD;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC;AAC/BgB,IAAAA,UAAU,EAAE,MADmB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC;;AAKA,WAASC,kBAAT,CAA4B;AAAEC,IAAAA,MAAM,EAAE;AAAEN,MAAAA;AAAF;AAAV,GAA5B,EAAmD;AACjDV,IAAAA,eAAe,CAAC;AAAEiB,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAf;AACD;;AAED,WAASQ,oBAAT,CAA8B;AAAEF,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQP,MAAAA;AAAR;AAAV,GAA9B,EAA2D;AACzDH,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhB,OAACW,IAAD,GAAQP;AAFQ,KAAD,CAAjB;AAID;;AAED,WAASS,WAAT,GAAuB;AACrBhB,IAAAA,wBAAwB,CAAC,CACvB,GAAGC,qBADoB,EAEvBE,cAFuB,CAAD,CAAxB;AAIA,UAAMc,cAAc,GAAG,CACrB,YADqB,EACP,gBADO,EACW,UADX,EACuB,iBADvB,EAC0C,eAD1C,CAAvB;AAGAlB,IAAAA,UAAU,CAACkB,cAAc,CAACC,MAAf,CAAuBC,MAAD,IAAYA,MAAM,KAAKhB,cAAc,CAACE,MAA5D,CAAD,CAAV;AACAD,IAAAA,iBAAiB,CAAC,EAChB,GAAGD,cADa;AAEhBE,MAAAA,MAAM,EAAEP,OAAO,CAAC,CAAD;AAFC,KAAD,CAAjB;AAID;;AAED,WAASsB,UAAT,CAAoB;AAAEP,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQP,MAAAA;AAAR;AAAV,GAApB,EAAiD;AAC/CE,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACM,IAAD,GAAQP;AAFF,KAAD,CAAP;AAID;;AAED,WAASc,eAAT,GAA2B;AACzBnB,IAAAA,YAAY,CAAC;AACXM,MAAAA;AADW,KAAD,CAAZ;AAGD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,mBAAY,aAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,EAAE,EAAC,WAJL;AAKE,IAAA,WAAW,EAAC,oBALd;AAME,IAAA,QAAQ,EAAGI,kBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAYE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,eADd;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,QAAQ,EAAGG,oBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIjB,OAAO,CAACwB,GAAR,CAAaH,MAAD,iBACZ;AAAQ,IAAA,GAAG,EAAGA,MAAd;AAAuB,IAAA,KAAK,EAAGA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,MAAzC,CADA,CANJ,CADF,CAZF,eAyBE;AAAO,IAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,mBAAY,mBADd;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,EAAE,EAAC,mBAHL;AAIE,IAAA,QAAQ,EAAGJ,oBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,eAOE;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,eAQE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF,CAzBF,eAsCE;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,cAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,EAAE,EAAC,cAJL;AAKE,IAAA,GAAG,EAAC,GALN;AAME,IAAA,QAAQ,EAAGA,oBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtCF,eAiDE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,eAFd;AAGE,IAAA,EAAE,EAAC,eAHL;AAIE,IAAA,OAAO,EAAGC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDF,CADF,eA4DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,mBAAY,aAApB;AAAkC,IAAA,IAAI,EAAC,YAAvC;AAAoD,IAAA,QAAQ,EAAGI,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,CADF,eAQE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,uBAFd;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAGA,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eARF,eAmBE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,wBAFd;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAGA,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAnBF,eA8BE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,oBAFd;AAGE,IAAA,OAAO,EAAGC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF,CA5DF,CADF;AAqGD;;AAED,eAAezB,OAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Filters.css';\n\nfunction Filters() {\n  const {\n    setFilterByName,\n    columns,\n    setColumns,\n    setFilterByNumericValues,\n    filterByNumericValues,\n    setSortState,\n  } = useContext(PlanetsContext);\n\n  const [filterByValues, setFilterByValues] = useState({\n    column: 'population',\n    comparison: 'menor que',\n    value: '0',\n  });\n\n  const [sort, setSort] = useState({\n    sortColumn: 'name',\n    sortType: 'ASC',\n  });\n\n  function handleFilterByName({ target: { value } }) {\n    setFilterByName({ name: value });\n  }\n\n  function handleFilterByValues({ target: { name, value } }) {\n    setFilterByValues({\n      ...filterByValues,\n      [name]: value,\n    });\n  }\n\n  function handleClick() {\n    setFilterByNumericValues([\n      ...filterByNumericValues,\n      filterByValues,\n    ]);\n    const initialColumns = [\n      'population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water',\n    ];\n    setColumns(initialColumns.filter((option) => option !== filterByValues.column));\n    setFilterByValues({\n      ...filterByValues,\n      column: columns[0],\n    });\n  }\n\n  function handleSort({ target: { name, value } }) {\n    setSort({\n      ...sort,\n      [name]: value,\n    });\n  }\n\n  function handleSortClick() {\n    setSortState({\n      sort,\n    });\n  }\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"filter-name\">\n          <input\n            type=\"text\"\n            data-testid=\"name-filter\"\n            name=\"name\"\n            id=\"nameInput\"\n            placeholder=\"Search for text...\"\n            onChange={ handleFilterByName }\n          />\n        </label>\n\n        <label htmlFor=\"filter-column\">\n          <select\n            data-testid=\"column-filter\"\n            name=\"column\"\n            id=\"filter-column\"\n            onChange={ handleFilterByValues }\n          >\n            { columns.map((option) => (\n              <option key={ option } value={ option }>{option}</option>\n            ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"filter-comparison\">\n          <select\n            data-testid=\"comparison-filter\"\n            name=\"comparison\"\n            id=\"filter-comparison\"\n            onChange={ handleFilterByValues }\n          >\n            <option value=\"menor que\">menor que</option>\n            <option value=\"maior que\">maior que</option>\n            <option value=\"igual a\">igual a</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"filter-value\">\n          <input\n            type=\"number\"\n            data-testid=\"value-filter\"\n            name=\"value\"\n            id=\"filter-value\"\n            min=\"0\"\n            onChange={ handleFilterByValues }\n          />\n        </label>\n\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          id=\"filter-button\"\n          onClick={ handleClick }\n        >\n          Filter\n        </button>\n      </div>\n\n      <div>\n        <label htmlFor=\"sort-column\">\n          <select data-testid=\"column-sort\" name=\"sortColumn\" onChange={ handleSort }>\n            <option value=\"name\">name</option>\n            <option value=\"orbital_period\">orbital_period</option>\n          </select>\n        </label>\n\n        <label htmlFor=\"asc-sort\">\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-asc\"\n            value=\"ASC\"\n            name=\"sortType\"\n            onClick={ handleSort }\n          />\n          Ascendente\n        </label>\n\n        <label htmlFor=\"desc-sort\">\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-desc\"\n            value=\"DESC\"\n            name=\"sortType\"\n            onClick={ handleSort }\n          />\n          Decrescente\n        </label>\n\n        <button\n          type=\"button\"\n          data-testid=\"column-sort-button\"\n          onClick={ handleSortClick }\n        >\n          Sort\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}