{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/context/Provider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction Provider({\n  children\n}) {\n  const initialState = {\n    data: [],\n    loading: true\n  };\n  const [state, setState] = useState(initialState);\n  useEffect(() => {\n    async function planetsFromAPI() {\n      const response = await fetchPlanets();\n      setState(prevState => ({ ...prevState,\n        data: response,\n        loading: false\n      }));\n    }\n\n    planetsFromAPI();\n  }, []); // const context = {\n  //   ...state,\n  // };\n\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/context/Provider.jsx"],"names":["React","useState","useEffect","PropTypes","PlanetsContext","fetchPlanets","Provider","children","initialState","data","loading","state","setState","planetsFromAPI","response","prevState","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,YAAD,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,cAAf,GAAgC;AAC9B,YAAMC,QAAQ,GAAG,MAAMT,YAAY,EAAnC;AACAO,MAAAA,QAAQ,CAAEG,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBN,QAAAA,IAAI,EAAEK,QAFiB;AAGvBJ,QAAAA,OAAO,EAAE;AAHc,OAAhB,CAAD,CAAR;AAKD;;AACDG,IAAAA,cAAc;AACf,GAVQ,EAUN,EAVM,CAAT,CAR8B,CAoB9B;AACA;AACA;;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF;AAKD;;AAEDD,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc,IAAV,CAAeC;AADN,CAArB;AAIA,eAAeZ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction Provider({ children }) {\n  const initialState = {\n    data: [],\n    loading: true,\n  };\n\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    async function planetsFromAPI() {\n      const response = await fetchPlanets();\n      setState((prevState) => ({\n        ...prevState,\n        data: response,\n        loading: false,\n      }));\n    }\n    planetsFromAPI();\n  }, []);\n\n  // const context = {\n  //   ...state,\n  // };\n\n  return (\n    <PlanetsContext.Provider value={ state }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}