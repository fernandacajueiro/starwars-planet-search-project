{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/context/Provider.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction Provider({\n  children\n}) {\n  const initialState = {\n    data: []\n  };\n  const [state, setState] = useState(initialState);\n\n  async function planetsFromAPI() {\n    const response = await fetchPlanets();\n    setState(prevState => ({ ...prevState,\n      data: response\n    }));\n  }\n\n  useEffect(() => {\n    async;\n  }, []);\n  const context = { ...state\n  };\n  console.log(state);\n  return /*#__PURE__*/React.createElement(PlanetsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/context/Provider.jsx"],"names":["React","useState","useEffect","PropTypes","PlanetsContext","fetchPlanets","Provider","children","initialState","data","state","setState","planetsFromAPI","response","prevState","async","context","console","log","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE;AADa,GAArB;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACO,YAAD,CAAlC;;AAEA,iBAAeI,cAAf,GAAgC;AAC9B,UAAMC,QAAQ,GAAG,MAAMR,YAAY,EAAnC;AACAM,IAAAA,QAAQ,CAAEG,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBL,MAAAA,IAAI,EAAEI;AAFiB,KAAhB,CAAD,CAAR;AAID;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMC,OAAO,GAAG,EACd,GAAGN;AADW,GAAhB;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAGM,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADF;AAKD;;AAEDD,QAAQ,CAACa,SAAT,GAAqB;AACnBZ,EAAAA,QAAQ,EAAEJ,SAAS,CAACiB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAef,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport PlanetsContext from './PlanetsContext';\nimport fetchPlanets from '../services/fetchPlanets';\n\nfunction Provider({ children }) {\n  const initialState = {\n    data: [],\n  };\n\n  const [state, setState] = useState(initialState);\n\n  async function planetsFromAPI() {\n    const response = await fetchPlanets();\n    setState((prevState) => ({\n      ...prevState,\n      data: response,\n    }));\n  }\n\n  useEffect(() => {\n    async\n  }, []);\n\n  const context = {\n    ...state,\n  };\n\n  console.log(state);\n\n  return (\n    <PlanetsContext.Provider value={ context }>\n      {children}\n    </PlanetsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}