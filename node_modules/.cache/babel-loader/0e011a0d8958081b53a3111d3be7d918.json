{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Table.jsx\";\nimport React, { useContext } from 'react';\nimport Loading from './Loading';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const {\n    planets,\n    loading\n  } = useContext(PlanetsContext);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  });\n\n  function tableHead() {\n    return /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, Object.keys(planets[0]).map(header => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, header))));\n  }\n\n  function tableRows() {\n    const data = planets.map((planet, index) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      id: \"planetsName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, planet.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, planet.rotation_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, planet.orbital_period), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, planet.diameter), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, planet.climate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, planet.gravity), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, planet.terrain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, planet.surface_water), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, planet.population), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, planet.created), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, planet.edited), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, planet.films), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, planet.url)));\n    return data;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, console.log(planets), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Star Wars Planet Search\"), /*#__PURE__*/React.createElement(\"table\", {\n    id: \"planetsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, tableHead(), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, tableRows())));\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-starwars-planets-search/src/components/Table.jsx"],"names":["React","useContext","Loading","PlanetsContext","Table","planets","loading","tableHead","Object","keys","map","header","tableRows","data","planet","index","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","created","edited","films","url","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAO,qBAAP;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBL,UAAU,CAACE,cAAD,CAAvC;AAEA,MAAIG,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AAEb,WAASC,SAAT,GAAqB;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,MAAM,CAACC,IAAP,CAAYJ,OAAO,CAAC,CAAD,CAAnB,EAAwBK,GAAxB,CAA6BC,MAAD,iBAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAL,CADF,CADA,CADJ,CADF;AAsBD;;AAED,WAASC,SAAT,GAAqB;AACnB,UAAMC,IAAI,GAAGR,OAAO,CAACK,GAAR,CAAY,CAACI,MAAD,EAASC,KAAT,kBACvB;AAAI,MAAA,GAAG,EAAGA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBD,MAAM,CAACE,IAA7B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,eAAZ,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,cAAZ,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,MAAM,CAACK,QAAZ,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,MAAM,CAACM,OAAZ,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,MAAM,CAACO,OAAZ,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,MAAM,CAACQ,OAAZ,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,MAAM,CAACS,aAAZ,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,MAAM,CAACU,UAAZ,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,MAAM,CAACW,OAAZ,CAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,MAAM,CAACY,MAAZ,CAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKZ,MAAM,CAACa,KAAZ,CAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKb,MAAM,CAACc,GAAZ,CAbF,CADW,CAAb;AAiBA,WAAOf,IAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIgB,OAAO,CAACC,GAAR,CAAYzB,OAAZ,CADJ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,eAGE;AAAO,IAAA,EAAE,EAAC,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,EADZ,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,SAAS,EADZ,CAFF,CAHF,CADF;AAYD;;AAED,eAAeR,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Loading from './Loading';\nimport PlanetsContext from '../context/PlanetsContext';\nimport '../styles/Table.css';\n\nfunction Table() {\n  const { planets, loading } = useContext(PlanetsContext);\n\n  if (loading) return <Loading />;\n\n  function tableHead() {\n    return (\n      <thead>\n        { Object.keys(planets[0]).map((header) => (\n          <tr>\n            <th>{header}</th>\n          </tr>\n        ))}\n        {/* <th>Name</th>\n          <th>Rotation period</th>\n          <th>Orbital period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface water</th>\n          <th>Population</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>Films</th>\n          <th>URL</th> */}\n      </thead>\n    );\n  }\n\n  function tableRows() {\n    const data = planets.map((planet, index) => (\n      <tr key={ index }>\n        <td id=\"planetsName\">{planet.name}</td>\n        <td>{planet.rotation_period}</td>\n        <td>{planet.orbital_period}</td>\n        <td>{planet.diameter}</td>\n        <td>{planet.climate}</td>\n        <td>{planet.gravity}</td>\n        <td>{planet.terrain}</td>\n        <td>{planet.surface_water}</td>\n        <td>{planet.population}</td>\n        <td>{planet.created}</td>\n        <td>{planet.edited}</td>\n        <td>{planet.films}</td>\n        <td>{planet.url}</td>\n      </tr>\n    ));\n    return data;\n  }\n\n  return (\n    <div>\n      { console.log(planets) }\n      <h1>Star Wars Planet Search</h1>\n      <table id=\"planetsTable\">\n        {tableHead()}\n        <tbody>\n          {tableRows()}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}